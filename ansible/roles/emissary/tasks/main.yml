---
- name: Get emissary namespace
  kubernetes.core.k8s_info:
    kind: Namespace
    name: emissary
    namespace: emissary
    kubeconfig: "{{ emissary_localhost_kubeconfig_path }}"
    validate_certs: true
  register: emissary_namespace
  delegate_to: localhost

- name: Check if emissary is already installed
  ansible.builtin.set_fact:
    emissary_is_installed: "{% if emissary_namespace.resources | length > 0 %}true{% else %}false{% endif %}"
  delegate_to: localhost

- name: Set user that run ansible playbook
  ansible.builtin.set_fact:
    emissary_user: "{{ lookup('env', 'USER') }}"
  delegate_to: localhost

- name: Create emissary namespace
  kubernetes.core.k8s:
    kind: Namespace
    api_version: v1
    name: emissary
    kubeconfig: "{{ emissary_localhost_kubeconfig_path }}"
    validate_certs: true
    state: present
  when: not emissary_is_installed or emissary_force_install
  delegate_to: localhost

- name: Download emissary crds manifest"
  ansible.builtin.get_url:
    url: "https://app.getambassador.io/yaml/emissary/{{ emissary_version }}/emissary-crds.yaml"
    dest: /tmp/emissary-crds.yaml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  when: not emissary_is_installed or emissary_force_install
  delegate_to: localhost

- name: Install emissary crds manifest
  kubernetes.core.k8s:
    src: /tmp/emissary-crds.yaml
    kubeconfig: "{{ emissary_localhost_kubeconfig_path }}"
    validate_certs: true
    state: present
  when: not emissary_is_installed or emissary_force_install
  delegate_to: localhost

- name: Download emissary services manifest"
  ansible.builtin.get_url:
    url: "https://app.getambassador.io/yaml/emissary/{{ emissary_version }}/emissary-emissaryns.yaml"
    dest: /tmp/emissary-emissaryns.yaml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
  when: not emissary_is_installed or emissary_force_install
  delegate_to: localhost

- name: Install emissary ressources manifest
  kubernetes.core.k8s:
    src: /tmp/emissary-emissaryns.yaml
    kubeconfig: "{{ emissary_localhost_kubeconfig_path }}"
    wait: true
    validate_certs: true
    state: present
  when: not emissary_is_installed or emissary_force_install
  delegate_to: localhost
