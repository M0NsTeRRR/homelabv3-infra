---
- name: Add pdns group
  ansible.builtin.group:
    name: pdns
    system: true
    state: present

- name: Add pdns user
  ansible.builtin.user:
    name: pdns
    system: true
    create_home: false
    shell: /usr/sbin/nologin
    group: pdns

- name: Install required packages by PowerDNS
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - gnupg-agent
      - sqlite3
    state: present

- name: Add PowerDNS Apt signing key
  ansible.builtin.get_url:
    url: "https://repo.powerdns.com/{{ powerdns_authoritative_repository_key }}-pub.asc"
    dest: /etc/apt/keyrings/powerdns_authoritative.asc
    owner: root
    group: root
    mode: "0644"

- name: Add PowerDNS Apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/powerdns_authoritative.asc] https://repo.powerdns.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }}-{{ powerdns_authoritative_repo_version | replace('.', '') }} main"
    state: present
    filename: powerdns_authoritative

- name: Configure apt preferences
  ansible.builtin.copy:
    src: apt-preferences
    dest: /etc/apt/preferences.d/pdns
    owner: root
    group: root
    mode: "0644"

- name: Install pdns-server
  ansible.builtin.apt:
    name: "pdns-server{% if powerdns_authoritative_version is defined %}={{ powerdns_authoritative_version }}{% endif %}"
    update_cache: true
    state: "{{ powerdns_authoritative_package_state }}"
  notify:
    - Enable pdns
    - Daemon-reload
    - Restart pdns

- name: Install pdns-backend-pgsql
  ansible.builtin.apt:
    name: "pdns-backend-pgsql{% if powerdns_authoritative_backend_pgsql_version is defined %}={{ powerdns_authoritative_backend_pgsql_version }}{% endif %}"
    update_cache: true
    state: "{{ powerdns_authoritative_backend_pgsql_package_state }}"
  notify: Restart pdns

- name: Install database
  ansible.builtin.include_tasks: install_db.yml

- name: Fix perms on PowerDNS configuration
  ansible.builtin.file:
    name: "/etc/powerdns/pdns.conf"
    owner: "pdns"
    group: "pdns"
    mode: "0640"
    state: file

- name: Ensure that the directories containing the PowerDNS SQLite databases exist
  ansible.builtin.file:
    name: "/var/lib/powerdns"
    owner: "pdns"
    group: "pdns"
    mode: "0755"
    state: directory

- name: Configure PowerDNS authoritative
  ansible.builtin.template:
    src: pdns.conf.j2
    dest: /etc/powerdns/pdns.conf
    owner: "pdns"
    group: "pdns"
    mode: "0640"
  notify: Restart pdns

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Wait pdns restart
  ansible.builtin.uri:
    url: "{{ powerdns_authoritative_api_base_url }}/api/v1/servers/localhost/zones"
    method: GET
    return_content: true
    status_code: 200
    headers:
      Content-Type: application/json
      X-Api-Key: "{{ powerdns_authoritative_api_key }}"
    ca_path: "{{ powerdns_authoritative_ca_path }}"
  register: powerdns_authoritative_restart
  until: powerdns_authoritative_restart.status == 200
  retries: 60
  delay: 1
