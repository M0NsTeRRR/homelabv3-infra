---
- name: Gather information of vault chart
  kubernetes.core.helm_info:
    name: vault
    release_namespace: vault
    kubeconfig: "{{ vault_localhost_kubeconfig_path }}"
    validate_certs: true
  register: vault_info
  delegate_to: localhost

- name: Check if vault is already installed
  ansible.builtin.set_fact:
    vault_is_installed: "{% if 'status' in vault_info %}true{% else %}false{% endif %}"
  delegate_to: localhost

- name: Create kubernetes secrets with vault certificates
  kubernetes.core.k8s:
    definition: "{{ lookup('ansible.builtin.template', 'secret.yml.j2') | from_yaml_all }}"
    wait: true
    kubeconfig: "{{ vault_localhost_kubeconfig_path }}"
    validate_certs: true
    state: present
  delegate_to: localhost

- name: "Install vault"
  kubernetes.core.k8s:
    definition: "{{ lookup('kubernetes.core.kustomize', dir=vault_kustomize_folder_path, enable_helm=True) }}"
    wait: true
    wait_timeout: 300
    kubeconfig: "{{ vault_localhost_kubeconfig_path }}"
    validate_certs: true
  delegate_to: localhost
  when: not vault_is_installed

- name: "Wait pod vault-{{ item }}"
  kubernetes.core.k8s_info:
    kind: Pod
    name: "vault-{{ item }}"
    namespace: vault
    kubeconfig: "{{ vault_localhost_kubeconfig_path }}"
    validate_certs: true
  register: vault_result
  until: vault_result.resources[0].status.phase == "Running"
  retries: 5
  delay: 30
  delegate_to: localhost
  with_sequence: start=0 end="{{ vault_replicas - 1 }}"

- name: Init vault
  ansible.builtin.include_tasks: init.yml
  when: not vault_is_installed

- name: Unseal vault
  ansible.builtin.include_tasks: unseal.yml
  with_sequence: start=0 end="{{ vault_replicas - 1 }}"

- name: Set vault secret engine
  ansible.builtin.include_tasks: secret_engine.yml

- name: Set vault auth method
  ansible.builtin.include_tasks: auth_method.yml

- name: Set vault policy
  ansible.builtin.include_tasks: policy.yml
  with_items: "{{ vault_policies }}"

- name: Set vault datas
  ansible.builtin.include_tasks: data.yml
  with_items: "{{ vault_datas }}"
