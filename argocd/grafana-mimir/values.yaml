global:
  extraEnvFrom:
    - secretRef:
        name: mimir-bucket
    - configMapRef:
        name: mimir-bucket

mimir:
  structuredConfig:
    common:
      storage:
        s3:
          bucket_name: ${BUCKET_NAME}
          access_key_id: ${AWS_ACCESS_KEY_ID}
          endpoint: ${BUCKET_HOST}
          secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          insecure: true
    blocks_storage:
      backend: s3
      storage_prefix: "blocks"
    alertmanager_storage:
      backend: s3
      storage_prefix: "alertmanager"
    ruler_storage:
      backend: s3
      storage_prefix: "ruler"
    limits:
      max_global_series_per_user: 0
      ruler_max_rules_per_rule_group: 0
      ruler_max_rule_groups_per_tenant: 0

ingester:
  persistentVolume:
    size: 40Gi

compactor:
  persistentVolume:
    size: 40Gi

store_gateway:
  persistentVolume:
    size: 10Gi

alertmanager:
  annotations:
    reloader.stakater.com/auto: "true"

ruler:
  annotations:
    reloader.stakater.com/auto: "true"

minio:
  enabled: false

metaMonitoring:
  dashboards:
    enabled: true
  serviceMonitor:
    enabled: true
  prometheusRule:
    mimirAlerts: true

gateway:
  enabledNonEnterprise: true
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: "vault"
      cert-manager.io/private-key-algorithm: "RSA"
      cert-manager.io/private-key-size: "4096"
    hosts:
      - host: mimir.unicornafk.fr
        paths:
          - path: /
            pathType: Prefix
    ingressClassName: "ingress-internal"
    tls:
      - secretName: mimir.unicornafk.fr
        hosts:
          - mimir.unicornafk.fr