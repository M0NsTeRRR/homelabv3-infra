---
- name: "Open required ports"
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.comment }}"
  when: item.to_open
  with_items:
    - {port: "8200", proto: tcp, to_open: true, comment: "Vault cluster bootstrapping, vault API"}
    - {port: "8201", proto: tcp, to_open: true, comment: "Vault raft replication, request forwarding"}

- name: Disable SWAP
  ansible.builtin.command: swapoff -a
  register: vault_swap
  changed_when: "vault_swap.stdout | length > 0"

- name: Disable SWAP in fstab
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Add vault group
  ansible.builtin.group:
    name: vault
    system: true
    state: present

- name: Add vault user
  ansible.builtin.user:
    name: vault
    system: true
    create_home: false
    shell: /usr/sbin/nologin
    group: vault

- name: Install required packages by Vault
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - gnupg-agent
    state: present

- name: Add Vault Apt signing key
  ansible.builtin.get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /usr/share/keyrings/vault.asc
    owner: root
    group: root
    mode: "0644"

- name: Add Vault Apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/vault.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    state: present
    filename: vault

- name: Install vault
  ansible.builtin.apt:
    name: "vault{% if vault_version is defined %}={{ vault_version }}{% endif %}"
    update_cache: true
    state: "{{ vault_package_state }}"
  notify:
    - Restart vault.service

- name: Create vault raft data directory
  ansible.builtin.file:
    name: /var/vault/raft
    state: directory
    owner: vault
    group: vault
    mode: "0640"

- name: Create vault configuration directory
  ansible.builtin.file:
    name: /etc/vault.d/ssl
    state: directory
    owner: vault
    group: vault
    mode: "0640"

- name: Add CA cert
  ansible.builtin.copy:
    src: "{{ vault_local_path_ca_certificate }}"
    dest: "{{ vault_ca_filename }}"
    owner: vault
    group: vault
    mode: "0640"
  notify: Restart vault.service

- name: Configure vault
  ansible.builtin.template:
    src: config.hcl.j2
    dest: /etc/vault.d/vault.hcl
    owner: vault
    group: vault
    mode: "0640"
  notify: Restart vault.service

- name: Create systemd service file
  ansible.builtin.copy:
    src: vault.service
    dest: /etc/systemd/system/vault.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Daemon-reload
    - Enable vault.service
    - Restart vault.service

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

# https://developer.hashicorp.com/vault/api-docs/system/health
- name: Wait vault restart
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}:8200/v1/sys/health"
    status_code:
      - 200 # if initialized, unsealed, and active
      - 429 # if unsealed and standby
      - 472 # if disaster recovery mode replication secondary and active
      - 473 # if performance standby
      - 501 # if not initialized
      - 503 # if sealed
  register: vault_status
  when: inventory_hostname == play_hosts[0]

- name: Init vault
  ansible.builtin.include_tasks: init.yml
  when:
    - vault_status.status == 501
    - inventory_hostname == play_hosts[0]

- name: Update vault auth methods
  ansible.builtin.include_tasks: auth_methods.yml
  when:
    - vault_status.status == 501
    - inventory_hostname == play_hosts[0]

- name: Update vault secrets engine
  ansible.builtin.include_tasks: secrets_engine.yml
  when:
    - vault_status.status == 501
    - inventory_hostname == play_hosts[0]