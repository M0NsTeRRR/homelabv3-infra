---
- name: Check certificate status
  ansible.builtin.include_tasks: check_cert.yml
  when: not item.force_renew

- name: Generate client OpenSSL private key
  community.crypto.openssl_privatekey:
    path: "/tmp/{{ item.common_name }}.key"
  delegate_to: localhost
  become: false
  when: >
    item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired

- name: Generate client OpenSSL certificate Signing Request
  community.crypto.openssl_csr:
    path: "/tmp/{{ item.common_name }}.csr"
    privatekey_path: "/tmp/{{ item.common_name }}.key"
    country_name: "{{ item.country }}"
    organization_name: "{{ item.organization }}"
    common_name: "{{ item.common_name }}"
    subject_alt_name:
      - "DNS:{{ item.common_name }}{% if item.subject_alt_name is defined %}{% for alt in item.subject_alt_name %},{{ alt }}{% endfor %}{% endif %}"
      - "IP:{{ ansible_default_ipv4.address }}"
      - "IP:{{ ansible_default_ipv6.address }}"
  delegate_to: localhost
  become: false
  when: >
    item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired

- name: Generate client OpenSSL certificate signed with our CA
  community.crypto.x509_certificate:
    path: "/tmp/{{ item.common_name }}.crt"
    ownca_path: "{{ item.intermediate_cert_local_path }}"
    ownca_privatekey_path: "{{ item.intermediate_private_local_path }}"
    ownca_privatekey_passphrase: "{{ item.intermediate_private_passphrase }}"
    csr_path: "/tmp/{{ item.common_name }}.csr"
    ownca_not_before: "-1d"
    ownca_not_after: "{{ item.ownca_not_after }}"
    provider: ownca
  delegate_to: localhost
  become: false
  when: >
    item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired

- name: Get fullchain cert
  community.crypto.certificate_complete_chain:
    input_chain: "{{ lookup('ansible.builtin.file', '/tmp/' ~ item.common_name ~  '.crt') }}"
    intermediate_certificates: "{{ item.intermediate_cert_local_path }}"
    root_certificates: "{{ item.ca_cert_local_path }}"
  delegate_to: localhost
  register: self_signed_cert_fullchain
  when: >
    item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired

- name: Save fullchain certificate
  ansible.builtin.copy:
    content: "{{ ''.join(self_signed_cert_fullchain.complete_chain) }}"
    dest: "/tmp/{{ item.common_name }}-fullchain.crt"
    mode: "0640"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  delegate_to: localhost
  when: >
    item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired

- name: Generate pkcs12 certificate
  ansible.builtin.include_tasks: generate_cert_pkcs12.yml
  when: >
    item.generate_pkcs12 and
    (item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired)

- name: Copy certificates to remote
  ansible.builtin.include_tasks: copy_cert.yml
  with_items: "{{ item.cert_remote_folder }}"
  loop_control:
    loop_var: folder
  when: >
    item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired

- name: Import SSL certificate to keystore
  community.general.java_cert:
    pkcs12_path: "{{ folder.path }}/{{ item.common_name }}.p12"
    pkcs12_password: "{{ item.pkcs12_passphrase }}"
    pkcs12_alias: "{{ item.pkcs12_friendly_name }}"
    keystore_path: "{{ item.keystore_path }}"
    keystore_pass: "{{ item.keystore_pass }}"
    keystore_create: true
    state: present
  with_items: "{{ item.cert_remote_folder }}"
  loop_control:
    loop_var: folder
  when: >
    item.generate_pkcs12 and
    (item.force_renew or
    self_signed_cert_missing or
    (item.upload_key and self_signed_cert_private_key_missing) or
    (item.generate_pkcs12 and self_signed_cert_pkcs12_missing) or
    self_signed_cert_expired)

- name: Clean local files
  ansible.builtin.file:
    path: "{{ file }}"
    state: absent
  delegate_to: localhost
  with_items:
    - "/tmp/{{ item.common_name }}.key"
    - "/tmp/{{ item.common_name }}.csr"
    - "/tmp/{{ item.common_name }}.crt"
    - "/tmp/{{ item.common_name }}-fullchain.crt"
    - "/tmp/{{ item.common_name }}.p12"
  loop_control:
    loop_var: file

- name: Update Pdns TLSA entry
  ansible.builtin.include_tasks: pdns_tlsa.yml
  when: self_signed_cert_pdns and "tlsa" in item
  with_items: "{{ item.tlsa }}"
  loop_control:
    loop_var: tlsa
