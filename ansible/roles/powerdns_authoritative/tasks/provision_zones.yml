---
- name: Set DNS CAA entries
  ansible.builtin.set_fact:
    powerdns_authoritative_caa: "{{ powerdns_authoritative_records | selectattr('caa', 'defined') | list }}"

- name: "Check if zone exist {{ item }}."
  ansible.builtin.uri:
    url: "{{ powerdns_authoritative_api_base_url }}/api/v1/servers/localhost/zones/{{ item }}."
    method: GET
    return_content: true
    status_code:
      - 200
      - 404
    headers:
      X-Api-Key: "{{ powerdns_authoritative_api_key }}"
  register: powerdns_authoritative_zone

- name: Configure PowerDNS authoritative
  ansible.builtin.template:
    src: post_zone.json.j2
    dest: /etc/powerdns/test.json
    owner: "pdns"
    group: "pdns"
    mode: "0640"
  when: powerdns_authoritative_zone.status == 404
  notify: Restart pdns

- name: "POST zone {{ item }}."
  ansible.builtin.uri:
    url: "{{ powerdns_authoritative_api_base_url }}/api/v1/servers/localhost/zones"
    method: POST
    return_content: true
    body_format: json
    body: "{{ lookup('template', 'post_zone.json.j2') }}"
    status_code: 201
    headers:
      Content-Type: application/json
      X-Api-Key: "{{ powerdns_authoritative_api_key }}"
  when: powerdns_authoritative_zone.status == 404
  register: powerdns_authoritative_response
  changed_when: powerdns_authoritative_response.status == 201

- name: "PATCH zone {{ item }}."
  ansible.builtin.uri:
    url: "{{ powerdns_authoritative_api_base_url }}/api/v1/servers/localhost/zones/{{ item }}."
    method: PATCH
    return_content: true
    body_format: json
    body: "{{ lookup('template', 'patch_zone.json.j2') }}"
    status_code: 204
    headers:
      Content-Type: application/json
      X-Api-Key: "{{ powerdns_authoritative_api_key }}"
  when: inventory_hostname == ansible_play_hosts_all[0]
  register: powerdns_authoritative_response
  changed_when: powerdns_authoritative_response.status == 204
