---
- name: Gather information of cert-manager chart
  kubernetes.core.helm_info:
    name: cert-manager
    release_namespace: cert-manager
    kubeconfig: "{{ cert_manager_localhost_kubeconfig_path }}"
    validate_certs: true
  register: cert_manager_info
  delegate_to: localhost

- name: Check if cert_manager is already installed
  ansible.builtin.set_fact:
    cert_manager_is_installed: "{% if 'status' in cert_manager_info %}true{% else %}false{% endif %}"
  delegate_to: localhost

- name: Install cert-manager crds manifest
  kubernetes.core.k8s:
    src: "https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_chart_version }}/cert-manager.crds.yaml"
    kubeconfig: "{{ cert_manager_localhost_kubeconfig_path }}"
    validate_certs: true
    state: present
  delegate_to: localhost
  when: not cert_manager_is_installed or cert_manager_force_install

- name: Add jetstack helm repo
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
    kubeconfig: "{{ cert_manager_localhost_kubeconfig_path }}"
    validate_certs: true
  delegate_to: localhost

- name: Deploy cert-manager chart
  kubernetes.core.helm:
    name: cert-manager
    chart_ref: jetstack/cert-manager
    chart_version: "{{ cert_manager_chart_version }}"
    release_namespace: cert-manager
    create_namespace: true
    release_values: "{{ lookup('ansible.builtin.file', 'helm-values.yml') | from_yaml }}"
    update_repo_cache: true
    wait: true
    kubeconfig: "{{ cert_manager_localhost_kubeconfig_path }}"
    validate_certs: true
  delegate_to: localhost
  when: not cert_manager_is_installed or cert_manager_force_install

- name: Create cert-manager prometheus rule
  kubernetes.core.k8s:
    definition: "{{ lookup('file', 'prometheus_rule.yml') | from_yaml }}"
    kubeconfig: "{{ cert_manager_localhost_kubeconfig_path }}"
    validate_certs: true
    state: present
  when: not cert_manager_is_installed or cert_manager_force_install
  delegate_to: localhost

- name: Install cert-manager cluster issuer manifest vault
  kubernetes.core.k8s:
    definition: "{{ lookup('ansible.builtin.template', 'vault-cluster-issuer.yml.j2') | from_yaml_all }}"
    kubeconfig: "{{ cert_manager_localhost_kubeconfig_path }}"
    wait: true
    validate_certs: true
    state: present
  delegate_to: localhost
