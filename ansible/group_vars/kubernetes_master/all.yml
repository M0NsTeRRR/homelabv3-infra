---
kube_vip_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
kube_vip_master_group: kubernetes_master
kube_vip_address:
  - namespace: kube-vip-ipv4
    address: 192.168.10.80
    cidr: 32
    prometheus_server: ":2112"
  - namespace: kube-vip-ipv6
    address: 2a0c:b641:2c0:110::80
    cidr: 128
    prometheus_server: ":2113"
kube_vip_interface: enp6s18
cilium_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
cilium_service_hosts:
  - "{{ kube_vip_address[0].address }}/{{ kube_vip_address[0].cidr }}"
  - "{{ kube_vip_address[1].address }}/{{ kube_vip_address[1].cidr }}"
traefik_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
traefik_external_ips:
  - 192.168.10.100
  - 2a0c:b641:2c0:110::100
traefik_namespace: traefik-external
traefik_default_ingress_class: false
traefik_ingress_class_name: traefik-external
longhorn_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
metallb_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
metallb_ip_address_pools:
  - name: private
    pools:
      - 192.168.10.100-192.168.10.120
      - 2a0c:b641:02c0:110::100-2a0c:b641:02c0:110::120
    auto_assign: true
vault_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
vault_init_output_file_path: "{{ root_dir_role_path }}/vault.json.secrets"
vault_ca_filename: "{{ ca_certificates_local_path_ca_certificate }}"
vault_cert_filename: "{{ certs_dir_role_path }}homelab/vault.unicornafk.fr/vault.unicornafk.fr-fullchain.crt"
vault_key_filename: "{{ certs_dir_role_path }}homelab/vault.unicornafk.fr/vault.unicornafk.fr.key"
vault_url: "https://vault.unicornafk.fr:8200"
vault_ca_path: "{{ ca_certificates_local_path_ca_certificate }}"
vault_loadbalancer_ip:
  - 192.168.10.102
  - 2a0c:b641:2c0:110::102
vault_secrets_engine:
  - name: kv-v2
    path: secret
  - name: pki
    path: pki
    tunes:
      max-lease-ttl: 8760h
      passthrough-request-headers:
        - If-Modified-Since
        - Last-Modified
        - Location
        - Replay-Nonce
        - Link
vault_auth_methods:
  - name: kubernetes
    path: kubernetes
vault_policies:
  - name: pki
    rules:
      - path: pki*
        capabilities:
          - read
          - list
      - path: pki/sign/*
        capabilities:
          - create
          - update
      - path: pki/issue/*
        capabilities:
          - create
  - name: external-dns-internal
    rules:
      - path: secret/data/homelab/prod/external_dns/internal
        capabilities:
          - read
  - name: external-dns-external
    rules:
      - path: secret/data/homelab/prod/external_dns/external
        capabilities:
          - read
public_vault_datas:
  - path: pki/config/ca
    data:
      pem_bundle: "{{ lookup('ansible.builtin.file', ca_certificates_local_path_ca_certificate) }}\n{{ lookup('ansible.builtin.file', certs_dir_role_path ~ 'intermediate/vault/vault.crt') }}\n{{ lookup('ansible.builtin.file', certs_dir_role_path ~ 'intermediate/vault/vault.key') }}"
  - path: pki/config/cluster
    data:
      path: https://vault.unicornafk.fr:8200/v1/pki
      aia_path: https://vault.unicornafk.fr:8200/v1/pki
  - path: pki/config/urls
    data:
      issuing_certificates: "{{ '{{' }}cluster_aia_path{{ '}}' }}/issuer/{{ '{{' }}issuer_id{{ '}}' }}/der"
      crl_distribution_points: "{{ '{{' }}cluster_aia_path{{ '}}' }}/issuer/{{ '{{' }}issuer_id{{ '}}' }}/crl/der"
      ocsp_servers: "{{ '{{' }}cluster_aia_path{{ '}}' }}/ocsp"
      enable_templating: true
  - path: pki/config/acme
    data:
      enabled: true
  - path: pki/roles/unicornafk-dot-fr
    data:
      allowed_domains: unicornafk.fr
      allow_subdomains: true
      ttl: 720h
      key_type: rsa
      key_bits: 4096
      signature_bits: 512
      organization: "{{ organization }}"
      country: "{{ country }}"
      require_cn: false # must be disabled for cert-manager
  - path: auth/kubernetes/config
    data:
      kubernetes_host: "https://10.43.0.1:443"
  - path: auth/kubernetes/role/vault-cert-manager
    data:
      bound_service_account_names: vault-cert-manager
      bound_service_account_namespaces: cert-manager
      audience: "vault://vault"
      policies: pki
      ttl: 1m
  - path: auth/kubernetes/role/external-dns-internal
    data:
      bound_service_account_names: external-dns
      bound_service_account_namespaces: external-dns-internal
      policies: external-dns-internal
      ttl: 72h
  - path: auth/kubernetes/role/external-dns-external
    data:
      bound_service_account_names: external-dns
      bound_service_account_namespaces: external-dns-external
      policies: external-dns-external
      ttl: 72h
vault_datas: "{{ public_vault_datas + secret_vault_datas }}"
cert_manager_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
cert_manager_email: "{{ monitoring_email }}"
cert_manager_vault_sign: unicornafk-dot-fr
cert_manager_vault_server_ca: "{{ vault_ca_filename }}"
external_dns_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
external_dns_namespace: "external-dns-external"
external_dns_vault_role: external-dns-external
external_dns_vault_inject_secret: secret/data/homelab/prod/external_dns/external
external_dns_vault_ca_filename: "{{ vault_ca_filename }}"
external_dns_envs:
  - SCW_ACCESS_KEY
  - SCW_SECRET_KEY
external_dns_args: "--source=ingress --provider=scaleway {% for domain in domains %}--domain-filter={{ domain }}{% if not loop.last %} {% endif %}{% endfor %} --registry=txt --txt-owner-id=homelab.kubernetes --ingress-class=traefik-external --default-targets=82.65.135.80 --default-targets=2a0c:b641:2c0:110::100"
argocd_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
argocd_hostname: argocd.unicornafk.fr
argocd_ingress_cluster_issuer: vault
argocd_ingress_class: traefik-internal
argocd_repositories:
  - name: homelab
    url: https://github.com/M0NsTeRRR/homelabv3-infra
argocd_notifiers:
  service.webhook.discord: |
      headers:
        - name: Content-Type
          value: application/json
      url: "https://discord.com"
argocd_subscriptions:
  - recipients:
      - discord
    triggers:
      - on-deployed
      - on-health-degraded
      - on-sync-failed
      - on-sync-running
      - on-sync-status-unknown
      - on-sync-succeeded
argocd_triggers:
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.operationState.syncResult.revision
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status
        == 'Healthy'
  trigger.on-health-degraded: |
    - description: Application has degraded
      send:
      - notify-discord
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      send:
      - notify-discord
      when: app.status.sync.status == 'Unknown'
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send:
      - notify-discord
      when: app.status.operationState.phase in ['Succeeded']
argocd_applications:
  - name: homelab
    repo_url: https://github.com/M0NsTeRRR/homelabv3-infra
    path: argocd
