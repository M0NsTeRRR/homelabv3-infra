---
- name: Open required ports
  community.general.ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    comment: "{{ item.comment }}"
  when: item.to_open
  with_items:
    - {port: "8600", proto: tcp, to_open: true, comment: "Consul DNS"}
    - {port: "8600", proto: udp, to_open: true, comment: "Consul DNS"}
    - {port: "8501", proto: tcp, to_open: true, comment: "Consul HTTPS API"}
    - {port: "8301", proto: tcp, to_open: true, comment: "Consul LAN Serf"}
    - {port: "8301", proto: udp, to_open: true, comment: "Consul LAN Serf"}
    - {port: "8302", proto: tcp, to_open: "{{ consul_server }}", comment: "Consul WAN Serf"}
    - {port: "8302", proto: udp, to_open: "{{ consul_server }}", comment: "Consul WAN Serf"}
    - {port: "8300", proto: tcp, to_open: "{{ consul_server }}", comment: "Consul RPC server"}

- name: Open sidecar-proxy required ports
  community.general.ufw:
    rule: allow
    port: "{{ item.1.port }}"
    proto: "{{ item.1.proto }}"
    comment: "{{ item.1.comment }}"
  with_subelements:
    - "{{ consul_services }}"
    - sidecar_proxy

- name: Add consul group
  ansible.builtin.group:
    name: consul
    system: true
    state: present

- name: Add consul user
  ansible.builtin.user:
    name: consul
    system: true
    create_home: false
    shell: /usr/sbin/nologin
    group: consul

- name: Check if consul is already installed
  ansible.builtin.stat:
    path: /usr/bin/consul
  register: consul

- name: Install required packages by Consul
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - gnupg-agent
    state: present

- name: Add Consul Apt signing key
  ansible.builtin.get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /usr/share/keyrings/consul.asc
    owner: root
    group: root
    mode: "0644"

- name: Add Consul Apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/consul.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    state: present
    filename: consul

- name: Install consul
  ansible.builtin.apt:
    name: "consul{% if consul_version is defined %}={{ consul_version }}{% endif %}"
    update_cache: true
    state: "{{ consul_package_state }}"
  notify:
    - Restart consul.service

- name: Create consul data directory
  ansible.builtin.file:
    name: /var/consul
    state: directory
    owner: consul
    group: consul
    mode: "0640"

- name: Create consul configuration directory
  ansible.builtin.file:
    name: /etc/consul.d/ssl
    state: directory
    owner: consul
    group: consul
    mode: "0640"

- name: Add CA cert
  ansible.builtin.copy:
    src: "{{ consul_local_path_ca_certificate }}"
    dest: "{{ consul_ca_filename }}"
    owner: consul
    group: consul
    mode: "0640"
  notify: Restart consul.service

- name: Configure consul
  ansible.builtin.template:
    src: config.hcl.j2
    dest: /etc/consul.d/consul.hcl
    owner: consul
    group: consul
    mode: "0640"
  notify: Restart consul.service

- name: Create systemd service file
  ansible.builtin.copy:
    src: consul.service
    dest: /etc/systemd/system/consul.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Daemon-reload
    - Enable consul.service
    - Restart consul.service

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Wait consul restart
  ansible.builtin.uri:
    url: "https://{{ groups[consul_server_group][0].hostname }}:8501/v1/health/node/{{ ansible_hostname }}"
    status_code: 200
    method: GET
    headers:
      Content-Type: application/json
      X-Consul-Token: "{{ consul_token_initial_management }}"
    client_cert: "{{ consul_client_cert }}"
    client_key: "{{ consul_client_key }}"
    return_content: true
  register: result
  until: result.json != []
  retries: 60
  delay: 1

- name: Init agent ACL token
  ansible.builtin.include_tasks: init_agent.yml
  when: not consul.stat.exists

- name: Provision consul services
  ansible.builtin.include_tasks: services.yml
  with_items: "{{ consul_services }}"
