---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: collector
spec:
  mode: daemonset
  targetAllocator:
    allocationStrategy: "per-node"
    enabled: true
    prometheusCR:
      enabled: true
      serviceMonitorSelector: {}
      podMonitorSelector: {}
    serviceAccount: targetallocator
  serviceAccount: collector
  env:
    - name: K8S_POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  volumeMounts:
    - name: varlogpods
      mountPath: /var/log/pods
      readOnly: true
  volumes:
    - name: varlogpods
      hostPath:
        path: /var/log/pods
  tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
  config:
    receivers:
      filelog:
        exclude:
        - /var/log/pods/default_release-name-opentelemetry-collector*_*/opentelemetry-collector/*.log
        include:
        - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
        - id: container-parser
          max_log_size: 102400
          type: container
        retry_on_failure:
          enabled: true
        start_at: end
      k8s_events: null
      otlp:
        protocols:
          grpc:
            endpoint: ${env:K8S_POD_IP}:4317
          http:
            endpoint: ${env:K8S_POD_IP}:4318
      prometheus:
        config:
          scrape_configs: []
        target_allocator:
          endpoint: http://collector-targetallocator
          interval: 30s
          collector_id: "${POD_NAME}"
    exporters:
      logging:
        verbosity: detailed
      otlp/prometheus:
        endpoint: http://victoria-metrics-victoria-metrics-single-server.victoria-metrics.svc.cluster.local:8428
      otlp/quickwit:
        endpoint: http://quickwit-indexer.quickwit.svc.cluster.local:7281
    extensions:
      health_check:
        endpoint: ${env:K8S_POD_IP}:13133
      memory_ballast: {}
    processors:
      batch:
        send_batch_max_size: 10000
        timeout: 200ms
      memory_limiter:
        check_interval: 1s
        limit_mib: 4000
        spike_limit_mib: 800
      k8sattributes:
        extract:
          metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.uid
          - k8s.pod.start_time
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection
    service:
      telemetry:
        metrics:
          level: detailed
          address: 0.0.0.0:8888
      extensions:
        - health_check
        - memory_ballast
      pipelines:
        logs:
          exporters:
            - otlp/quickwit
            - logging
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
        metrics:
          exporters:
            - otlp/prometheus
            - logging
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
        traces:
          exporters:
            - otlp/quickwit
            - logging
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
