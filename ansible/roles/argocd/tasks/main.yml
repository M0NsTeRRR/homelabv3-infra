---
- name: Gather information of argocd chart
  kubernetes.core.helm_info:
    name: argocd
    release_namespace: argocd
    kubeconfig: "{{ argocd_localhost_kubeconfig_path }}"
    validate_certs: true
  register: argocd_info
  delegate_to: localhost

- name: Check if argocd is already installed
  ansible.builtin.set_fact:
    argocd_is_installed: "{% if 'status' in argocd_info %}true{% else %}false{% endif %}"
  delegate_to: localhost

- name: Add argo helm repo
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm
    kubeconfig: "{{ argocd_localhost_kubeconfig_path }}"
    validate_certs: true
  delegate_to: localhost

- name: Deploy argocd chart
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    chart_version: "{{ argocd_helm_version }}"
    release_namespace: argocd
    create_namespace: true
    release_values: "{{ lookup('ansible.builtin.template', 'helm-values.yml.j2') | from_yaml }}"
    update_repo_cache: true
    wait: true
    kubeconfig: "{{ argocd_localhost_kubeconfig_path }}"
    validate_certs: true
  delegate_to: localhost
  when: not argocd_is_installed or argocd_force_install

- name: Setup external-secret
  kubernetes.core.k8s:
    definition: "{{ lookup('ansible.builtin.template', 'external_secret.yml.j2') | from_yaml_all }}"
    kubeconfig: "{{ argocd_localhost_kubeconfig_path }}"
    wait: true
    validate_certs: true
    state: present
  delegate_to: localhost

- name: Deploy applications
  kubernetes.core.k8s:
    definition: "{{ lookup('ansible.builtin.template', 'application.yml.j2') | from_yaml }}"
    kubeconfig: "{{ argocd_localhost_kubeconfig_path }}"
    validate_certs: true
    state: present
  with_items: "{{ argocd_applications }}"
  delegate_to: localhost
