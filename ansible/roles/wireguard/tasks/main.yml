---
- name: Open required ports
  community.general.ufw:
    rule: allow
    port: "51820"
    proto: udp
    comment: "Wireguard"

- name: Allow everything from UFW wg0 interface
  community.general.ufw:
    rule: allow
    route: true
    interface_in: wg0
    comment: "Wireguard routing"

- name: Add wireguard group
  ansible.builtin.group:
    name: wireguard
    system: true
    state: present

- name: Add wireguard user
  ansible.builtin.user:
    name: wireguard
    system: true
    create_home: false
    shell: /usr/sbin/nologin
    group: wireguard

- name: Install qrencode
  ansible.builtin.apt:
    name: qrencode
    state: present

- name: Install wireguard
  ansible.builtin.apt:
    name: "wireguard{% if wireguard_version is defined %}={{ wireguard_version }}{% endif %}"
    update_cache: true
    state: "{{ wireguard_package_state }}"

- name: Update sysctl config
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: true
  with_items:
    - { name: 'net.ipv4.ip_forward', value: '1' }
    - { name: 'net.ipv6.conf.all.forwarding', value: '1' }

- name: Create wireguard folder
  ansible.builtin.file:
    path: /etc/systemd/system/wireguard.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Configure wireguard as non root user
  ansible.builtin.copy:
    src: override.conf
    dest: /etc/systemd/system/wireguard.d/override.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - Daemon-reload
    - Restart wireguard

- name: Setup clients
  ansible.builtin.include_tasks: clients.yml

- name: Setup interface and peers
  ansible.builtin.template:
    src: wg0.conf.j2
    dest: "/etc/wireguard/wg0.conf"
    mode: "0600"
    owner: wireguard
    group: wireguard
  notify:
    - Daemon-reload
    - Restart wireguard
    - Enable wireguard
