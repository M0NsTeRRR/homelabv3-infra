#jinja2: lstrip_blocks: "True"
receivers:
  filelog:
    include:
      - /var/log/**/*.log
    include_file_name: false
    include_file_path: true
    retry_on_failure:
      enabled: true
    start_at: end
  otlp:
    protocols:
      grpc: null
      http: null
  prometheus:
    config:
      scrape_configs:
        - job_name: "otel-collector"
          scrape_interval: 30s
          scrape_timeout: 5s
          static_configs:
            - targets: ["127.0.0.1:8888"]
        - job_name: "node-exporter"
          scrape_interval: 30s
          scrape_timeout: 5s
          static_configs:
            - targets: ["127.0.0.1:9100"]
        {% for scrape in opentelemetry_collector_extra_scrape %}
        - job_name: "{{ scrape.name }}"
          scrape_interval: 30s
          scrape_timeout: 5s
          {% if scrape.metrics_path is defined %}
          metrics_path: "{{ scrape.metrics_path }}"
          {% else %}
          metrics_path: "/metrics"
          {% endif %}
          static_configs:
            - targets:
              {{ scrape.targets | to_nice_yaml }}
          {%- if scrape.basic_auth is defined %}
          basic_auth:
            username: '{{ scrape.basic_auth.username }}'
            password: '{{ scrape.basic_auth.password }}'
          {% endif %}
        {%- endfor %}
exporters:
  logging:
   verbosity: normal
  prometheusremotewrite/victoriametrics:
    endpoint: {{ opentelemetry_collector_metrics_prometheus_url }}
    resource_to_telemetry_conversion:
      enabled: true
    tls:
      cert_file: /etc/otelcol-contrib/ssl/{{ opentelemetry_collector_cert_filename }}
      key_file: /etc/otelcol-contrib/ssl/{{ opentelemetry_collector_key_filename }}
      ca_file: /etc/otelcol-contrib/ssl/ca.crt
  otlp/quickwit:
    endpoint: {{ opentelemetry_collector_logs_otlp_url }}
    tls:
      insecure: true
      # cert_file: /etc/otelcol-contrib/ssl/{{ opentelemetry_collector_cert_filename }}
      # key_file: /etc/otelcol-contrib/ssl/{{ opentelemetry_collector_key_filename }}
      # ca_file: /etc/otelcol-contrib/ssl/ca.crt
extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    tls:
      cert_file: /etc/otelcol-contrib/ssl/{{ opentelemetry_collector_cert_filename }}
      key_file: /etc/otelcol-contrib/ssl/{{ opentelemetry_collector_key_filename }}
      ca_file: /etc/otelcol-contrib/ssl/ca.crt
processors:
  batch:
    send_batch_max_size: 10000
    timeout: 200ms
  memory_limiter:
    check_interval: 1s
    limit_mib: 4000
    spike_limit_mib: 800
  resourcedetection/system:
    detectors: [system]
    system:
      hostname_sources: ["os"]
      resource_attributes:
        host.name:
          enabled: true
        os.type:
          enabled: false
  resource/service-instance:
    attributes:
      - key: service.instance.id
        from_attribute: host.name
        action: update
service:
  telemetry:
    metrics:
      address: 127.0.0.1:8888
  extensions:
    - health_check
  pipelines:
    logs:
      exporters:
        - otlp/quickwit
        - logging
      processors:
        - resourcedetection/system
        - resource/service-instance
        - memory_limiter
        - batch
      receivers:
        - filelog
        - otlp
    metrics:
      exporters:
        - prometheusremotewrite/victoriametrics
        - logging
      processors:
        - resourcedetection/system
        - resource/service-instance
        - memory_limiter
        - batch
      receivers:
        - prometheus
        - otlp
    traces:
      exporters:
        - otlp/quickwit
        - logging
      processors:
        - resourcedetection/system
        - resource/service-instance
        - memory_limiter
        - batch
      receivers:
        - otlp