---
kube_vip_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
kube_vip_master_group: kubernetes_master
kube_vip_address: "192.168.10.80,2a0c:b641:2c0:110::80"
kube_vip_interface: enp6s18
prometheus_operator_crds_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
cilium_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
cilium_service_hosts:
  - "{{ kube_vip_address[0].address }}/{{ kube_vip_address[0].cidr }}"
  - "{{ kube_vip_address[1].address }}/{{ kube_vip_address[1].cidr }}"
traefik_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
traefik_external_ips:
  - 192.168.10.100
  - 2a0c:b641:2c0:110::100
traefik_namespace: ingress-external
traefik_default_ingress_class: false
traefik_ingress_class_name: ingress-external
longhorn_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
metallb_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
metallb_ip_address_pools:
  - name: private
    pools:
      - 192.168.10.100-192.168.10.120
      - 2a0c:b641:02c0:110::100-2a0c:b641:02c0:110::120
    auto_assign: true
rook_operator_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
rook_cluster_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
rook_cluster_vault_ca: "{{ kubernetes_homelab_ca_config_map }}"
rook_cluster_vault_secret_key: "secret/data/homelab/prod/rook-ceph-cluster"
vault_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
vault_init_output_file_path: "{{ root_dir_role_path }}/vault.json.secrets"
vault_ca_filename: "{{ ca_certificates_local_path_ca_certificate }}"
vault_cert_filename: "{{ certs_dir_role_path }}homelab/vault.unicornafk.fr/vault.unicornafk.fr-fullchain.crt"
vault_key_filename: "{{ certs_dir_role_path }}homelab/vault.unicornafk.fr/vault.unicornafk.fr.key"
vault_ca_path: "{{ ca_certificates_local_path_ca_certificate }}"
vault_loadbalancer_ips:
  - 192.168.10.102
  - 2a0c:b641:2c0:110::102
vault_secrets_engine:
  - name: kv-v2
    path: secret
  - name: pki
    path: pki
    tunes:
      max-lease-ttl: 8760h
      passthrough-request-headers:
        - If-Modified-Since
        - Last-Modified
        - Location
        - Replay-Nonce
        - Link
      allowed_response_headers:
        - Location
        - Link
        - Replay-Nonce
vault_auth_methods:
  - name: oidc
    path: oidc
  - name: kubernetes
    path: kubernetes
vault_policies:
  - name: viewer
    rules:
      - path: /secret/*
        capabilities:
          - read
          - list
      - path: pki*
        capabilities:
          - read
          - list
  - name: pki
    rules:
      - path: pki*
        capabilities:
          - read
          - list
      - path: pki/sign/*
        capabilities:
          - create
          - update
      - path: pki/issue/*
        capabilities:
          - create
  - name: cert-manager-scaleway
    rules:
      - path: secret/data/homelab/prod/cert_manager_scaleway
        capabilities:
          - read
  - name: external-dns-internal
    rules:
      - path: secret/data/homelab/prod/external_dns/internal
        capabilities:
          - read
  - name: external-dns-external
    rules:
      - path: secret/data/homelab/prod/external_dns/external
        capabilities:
          - read
  - name: argocd
    rules:
      - path: secret/data/homelab/prod/argocd
        capabilities:
          - read
  - name: csi-driver-smb
    rules:
      - path: secret/data/homelab/prod/csi-driver-smb
        capabilities:
          - read
  - name: authentik
    rules:
      - path: secret/data/homelab/prod/authentik
        capabilities:
          - read
  - name: rook-ceph-cluster
    rules:
      - path: secret/data/homelab/prod/rook-ceph-cluster
        capabilities:
          - read
  - name: grafana
    rules:
      - path: secret/data/homelab/prod/grafana
        capabilities:
          - read
  - name: prometheus-snmp-exporter
    rules:
      - path: secret/data/homelab/prod/prometheus-snmp-exporter
        capabilities:
          - read
  - name: prometheus-pve-exporter
    rules:
      - path: secret/data/homelab/prod/prometheus-pve-exporter
        capabilities:
          - read
  - name: as212510-net
    rules:
      - path: secret/data/homelab/prod/as212510-net
        capabilities:
          - read
  - name: hyperglass
    rules:
      - path: secret/data/homelab/prod/hyperglass
        capabilities:
          - read
  - name: bazarr
    rules:
      - path: secret/data/homelab/prod/bazarr
        capabilities:
          - read
  - name: prowlarr
    rules:
      - path: secret/data/homelab/prod/prowlarr
        capabilities:
          - read
  - name: radarr
    rules:
      - path: secret/data/homelab/prod/radarr
        capabilities:
          - read
  - name: sonarr
    rules:
      - path: secret/data/homelab/prod/sonarr
        capabilities:
          - read
  - name: qbittorrent
    rules:
      - path: secret/data/homelab/prod/qbittorrent
        capabilities:
          - read
      - path: secret/data/homelab/prod/gluetun
        capabilities:
          - read
public_vault_datas:
  - path: pki/config/ca
    data:
      pem_bundle: "{{ lookup('ansible.builtin.file', ca_certificates_local_path_ca_certificate) }}\n{{ lookup('ansible.builtin.file', certs_dir_role_path ~ 'intermediate/vault/vault.crt') }}\n{{ lookup('ansible.builtin.file', certs_dir_role_path ~ 'intermediate/vault/vault.key') }}"
  - path: pki/config/cluster
    data:
      path: https://vault.unicornafk.fr:8200/v1/pki
      aia_path: https://vault.unicornafk.fr:8200/v1/pki
  - path: pki/config/urls
    data:
      issuing_certificates: "{{ '{{' }}cluster_aia_path{{ '}}' }}/issuer/{{ '{{' }}issuer_id{{ '}}' }}/der"
      crl_distribution_points: "{{ '{{' }}cluster_aia_path{{ '}}' }}/issuer/{{ '{{' }}issuer_id{{ '}}' }}/crl/der"
      ocsp_servers: "{{ '{{' }}cluster_aia_path{{ '}}' }}/ocsp"
      enable_templating: true
  - path: pki/config/acme
    data:
      enabled: true
  - path: pki/roles/cert-manager
    data:
      allow_any_name: true
      ttl: 90d
      max_ttl: 365d
      key_type: rsa
      key_bits: 4096
      signature_bits: 512
      organization: "{{ organization }}"
      country: "{{ country }}"
      require_cn: false # must be disabled for cert-manager
  - path: auth/kubernetes/config
    data:
      kubernetes_host: "https://10.43.0.1:443"
  - path: auth/kubernetes/role/cert-manager
    data:
      bound_service_account_names: cert-manager-vault
      bound_service_account_namespaces: cert-manager
      audience: "vault://vault"
      policies: pki
      ttl: 1m
  - path: auth/kubernetes/role/cert-manager-scaleway
    data:
      bound_service_account_names: cert-manager-scaleway-vault
      bound_service_account_namespaces: cert-manager-scaleway
      policies: cert-manager-scaleway
      ttl: 1h
  - path: auth/kubernetes/role/external-dns-internal
    data:
      bound_service_account_names: external-dns-vault
      bound_service_account_namespaces: external-dns-internal
      policies: external-dns-internal
      ttl: 1h
  - path: auth/kubernetes/role/external-dns-external
    data:
      bound_service_account_names: external-dns-vault
      bound_service_account_namespaces: external-dns-external
      policies: external-dns-external
      ttl: 1h
  - path: auth/kubernetes/role/argocd
    data:
      bound_service_account_names: argocd-vault
      bound_service_account_namespaces: argocd
      policies: argocd
      ttl: 1h
  - path: auth/kubernetes/role/csi-driver-smb
    data:
      bound_service_account_names: csi-driver-smb-vault
      bound_service_account_namespaces: csi-driver-smb
      policies: csi-driver-smb
      ttl: 1m
  - path: auth/kubernetes/role/authentik
    data:
      bound_service_account_names: authentik-vault
      bound_service_account_namespaces: authentik
      policies: authentik
      ttl: 1h
  - path: auth/kubernetes/role/rook-ceph-cluster
    data:
      bound_service_account_names: rook-ceph-cluster-vault
      bound_service_account_namespaces: rook-ceph-cluster
      policies: rook-ceph-cluster
      ttl: 1h
  - path: auth/kubernetes/role/grafana
    data:
      bound_service_account_names: grafana-vault
      bound_service_account_namespaces: grafana
      policies: grafana
      ttl: 1h
  - path: auth/kubernetes/role/prometheus-snmp-exporter
    data:
      bound_service_account_names: prometheus-snmp-exporter-vault
      bound_service_account_namespaces: prometheus-snmp-exporter
      policies: prometheus-snmp-exporter
      ttl: 1h
  - path: auth/kubernetes/role/prometheus-pve-exporter
    data:
      bound_service_account_names: prometheus-pve-exporter-vault
      bound_service_account_namespaces: prometheus-pve-exporter
      policies: prometheus-pve-exporter
      ttl: 1h
  - path: auth/kubernetes/role/as212510-net
    data:
      bound_service_account_names: as212510-net-vault
      bound_service_account_namespaces: as212510-net
      policies: as212510-net
      ttl: 1h
  - path: auth/kubernetes/role/hyperglass
    data:
      bound_service_account_names: hyperglass-vault
      bound_service_account_namespaces: hyperglass
      policies: hyperglass
      ttl: 1h
  - path: auth/kubernetes/role/qbittorrent
    data:
      bound_service_account_names: qbittorrent-vault
      bound_service_account_namespaces: qbittorrent
      policies: qbittorrent
      ttl: 1h
  - path: auth/kubernetes/role/bazarr
    data:
      bound_service_account_names: bazarr-vault
      bound_service_account_namespaces: bazarr
      policies: bazarr
      ttl: 1h
  - path: auth/kubernetes/role/prowlarr
    data:
      bound_service_account_names: prowlarr-vault
      bound_service_account_namespaces: prowlarr
      policies: prowlarr
      ttl: 1h
  - path: auth/kubernetes/role/radarr
    data:
      bound_service_account_names: radarr-vault
      bound_service_account_namespaces: radarr
      policies: radarr
      ttl: 1h
  - path: auth/kubernetes/role/sonarr
    data:
      bound_service_account_names: sonarr-vault
      bound_service_account_namespaces: sonarr
      policies: sonarr
      ttl: 1h
vault_datas: "{{ public_vault_datas + secret_vault_datas }}"
external_secrets_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
cert_manager_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
cert_manager_vault_ingress_class: ingress-internal
cert_manager_vault_sign: cert-manager
cert_manager_vault_ca_path: "{{ ca_certificates_local_path_ca_certificate }}"
cert_manager_scaleway_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
cert_manager_scaleway_email: "{{ monitoring_email }}"
cert_manager_scaleway_vault_ca: "{{ kubernetes_homelab_ca_config_map }}"
cert_manager_scaleway_vault_secret_key: "secret/data/homelab/prod/cert_manager_scaleway"
trust_manager_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
trust_manager_certificates:
  - name: "{{ kubernetes_homelab_ca_config_map }}"
    key: ca.crt
    sources:
      - inLine: |
          {{ lookup('ansible.builtin.file', vault_ca_filename) }}
external_dns_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
external_dns_namespace: "external-dns-external"
external_dns_provider: scaleway
external_dns_txt_owner_id: homelab.kubernetes
external_dns_domain_filters: "{{ external_domains }}"
external_dns_envs:
  EXTERNAL_DNS_INGRESS_CLASS: ingress-external
  EXTERNAL_DNS_DEFAULT_TARGETS: |-
    |-
    {{ public_ipv4 | indent(6, true) }}
    {{ "2a0c:b641:2c0:110::100" | indent(6, true) }}
external_dns_ca: ""
external_dns_vault_secrets:
  - key: secret/data/homelab/prod/external_dns/external
    property: SCW_ACCESS_KEY
  - key: secret/data/homelab/prod/external_dns/external
    property: SCW_SECRET_KEY
external_dns_vault_ca: "{{ kubernetes_homelab_ca_config_map }}"
external_dns_vault_role: external-dns-external
argocd_localhost_kubeconfig_path: "{{ kubernetes_localhost_kubeconfig_path }}"
argocd_oidc_issuer_url: https://sso.unicornafk.fr/application/o/argocd/
argocd_hostname: argocd.unicornafk.fr
argocd_ingress_cluster_issuer: vault
argocd_ingress_class: ingress-internal
argocd_vault_ca: "{{ kubernetes_homelab_ca_config_map }}"
argocd_vault_secret_key: "secret/data/homelab/prod/argocd"
argocd_repositories:
  homelab:
    name: homelab
    url: https://github.com/M0NsTeRRR/homelabv3-infra
argocd_notifiers:
  service.webhook.discord: |
      headers:
        - name: Content-Type
          value: application/json
      url: "https://discord.com"
argocd_subscriptions:
  - recipients:
      - discord
    triggers:
      - on-created
      - on-deleted
      - on-deployed
      - on-health-degraded
      - on-sync-failed
      - on-sync-running
      - on-sync-status-unknown
      - on-sync-succeeded
argocd_triggers:
  trigger.on-created: |
    - description: Application is created.
      oncePer: app.metadata.name
      send:
      - notify-discord-created
      when: "true"
  trigger.on-deleted: |
    - description: Application is deleted.
      oncePer: app.metadata.name
      send:
      - notify-discord-deleted
      when: app.metadata.deletionTimestamp != nil
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.operationState.syncResult.revision
      send:
      - notify-discord-deployed
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status
        == 'Healthy'
  trigger.on-health-degraded: |
    - description: Application has degraded
      send:
      - notify-discord-degraded
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
      - notify-discord-failed
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - notify-discord-running
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      send:
      - notify-discord-unknown
      when: app.status.sync.status == 'Unknown'
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send:
      - notify-discord-succeeded
      when: app.status.operationState.phase in ['Succeeded']
argocd_templates:
  template.notify-discord-created: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "{{ .app.metadata.name }}: has been created 🆕",
                "description": "Application has been created",
                "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "color": 3447003
              }
            ]
          }
        {% endraw %}
  template.notify-discord-deleted: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "{{ .app.metadata.name }}: has been deleted ❌",
                "description": "Application has been deleted",
                "color": 3447003
              }
            ]
          }
        {% endraw %}
  template.notify-discord-deployed: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "New version of {{ .app.metadata.name }} is up and running ✅",
                "description": "Application is now running new version of deployments manifests",
                "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{ .app.status.sync.status }}"
                  },
                  {
                    "name": "Author",
                    "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}"
                  },
                  {
                    "name": "Revision",
                    "value": "[{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}]({{ (trimAll ".git" .app.spec.source.repoURL) }}/commit/{{ .app.status.sync.revision }})"
                  }
                ],
                "color": 5763719
              }
            ]
          }
        {% endraw %}
  template.notify-discord-degraded: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "{{ .app.metadata.name }} has degraded ⚠️",
                "description": "Application has degraded",
                "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{ .app.status.sync.status }}"
                  },
                  {
                    "name": "Author",
                    "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}"
                  },
                  {
                    "name": "Revision",
                    "value": "[{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}]({{ (trimAll ".git" .app.spec.source.repoURL) }}/commit/{{ .app.status.sync.revision }})"
                  }
                ],
                "color": 16776960
              }
            ]
          }
        {% endraw %}
  template.notify-discord-failed: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "{{ .app.metadata.name }} sync failed ❌",
                "description": "The sync operation of application has failed",
                "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{ .app.status.sync.status }}"
                  },
                  {
                    "name": "Error",
                    "value": "{{ .app.status.operationState.message }}"
                  },
                  {
                    "name": "Author",
                    "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}"
                  },
                  {
                    "name": "Revision",
                    "value": "[{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}]({{ (trimAll ".git" .app.spec.source.repoURL) }}/commit/{{ .app.status.sync.revision }})"
                  }
                ],
                "color": 15548997
              }
            ]
          }
        {% endraw %}
  template.notify-discord-running: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "{{ .app.metadata.name }} start syncing 🔄",
                "description": "Start syncing application",
                "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{ .app.status.sync.status }}"
                  },
                  {
                    "name": "Author",
                    "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}"
                  },
                  {
                    "name": "Revision",
                    "value": "[{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}]({{ (trimAll ".git" .app.spec.source.repoURL) }}/commit/{{ .app.status.sync.revision }})"
                  }
                ],
                "color": 3447003
              }
            ]
          }
        {% endraw %}
  template.notify-discord-unknown: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "{{ .app.metadata.name }} sync status is unknown ⚠️",
                "description": "Application sync is Unknown",
                "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{ .app.status.sync.status }}"
                  },
                  {
                    "name": "Author",
                    "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}"
                  },
                  {
                    "name": "Revision",
                    "value": "[{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}]({{ (trimAll ".git" .app.spec.source.repoURL) }}/commit/{{ .app.status.sync.revision }})"
                  }
                ],
                "color": 16776960
              }
            ]
          }
        {% endraw %}
  template.notify-discord-succeeded: |
    webhook:
      discord:
        path: "{{ argocd_discord_webhook_path_url }}?wait=true"
        method: POST
        {% raw %}
        body: |
          {
            "embeds": [
              {
                "title": "{{ .app.metadata.name }} has been successfully synced ✅",
                "description": "Application has been successfully synced",
                "url": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
                "fields": [
                  {
                    "name": "Sync Status",
                    "value": "{{ .app.status.sync.status }}"
                  },
                  {
                    "name": "Author",
                    "value": "{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Author }}"
                  },
                  {
                    "name": "Revision",
                    "value": "[{{ (call .repo.GetCommitMetadata .app.status.sync.revision).Message }}]({{ (trimAll ".git" .app.spec.source.repoURL) }}/commit/{{ .app.status.sync.revision }})"
                  }
                ],
                "color": 5763719
              }
            ]
          }
        {% endraw %}
argocd_applications:
  - name: homelabv3-infra
    repo_url: https://github.com/M0NsTeRRR/homelabv3-infra
    directories:
      - path: "argocd/*/*"
